#!/usr/bin/env python
"""
Script para borrar completamente la colecci√≥n /sensors de Firebase RTDB.
Ahora funciona con la nueva estructura de sensores fijos con IDs.
Requiere: pip install firebase-admin~=6.5
"""

import firebase_admin
from firebase_admin import credentials, db

SERVICE_ACCOUNT_FILE = "firebaseRTDB-key.json"
DATABASE_URL = "https://invernadero-iot-dfa2f-default-rtdb.firebaseio.com"

def clear_sensors_collection():
    """
    Borra completamente la colecci√≥n /sensors de Firebase RTDB.
    """
    try:
        # Inicializar Firebase Admin
        cred = credentials.Certificate(SERVICE_ACCOUNT_FILE)
        firebase_admin.initialize_app(cred, {"databaseURL": DATABASE_URL})

        # Obtener referencia a la colecci√≥n sensors
        root = db.reference()
        sensors_ref = root.child("sensors")

        # Verificar si existe la colecci√≥n
        sensors_data = sensors_ref.get()

        if sensors_data is None:
            print("‚úì La colecci√≥n /sensors ya est√° vac√≠a o no existe.")
            return

        # Contar los elementos antes de borrar
        sensor_count = len(sensors_data) if isinstance(sensors_data, dict) else 0
        print(f"üìä Encontrados {sensor_count} sensores en la colecci√≥n /sensors")

        # Mostrar los IDs de los sensores que se van a borrar
        if isinstance(sensors_data, dict):
            print("üè∑Ô∏è  Sensores encontrados:")
            for sensor_id, sensor_data in sensors_data.items():
                device_id = sensor_data.get('deviceId', 'unknown')
                sensor_type = sensor_data.get('type', 'unknown')
                print(f"    - {sensor_id} ({device_id} - {sensor_type})")

        # Confirmar la operaci√≥n
        print("\n‚ö†Ô∏è  ATENCI√ìN: Esta operaci√≥n borrar√° TODOS los sensores fijos.")
        print("   Despu√©s de esto necesitar√°s ejecutar 'python setup_fixed_sensors.py' para recrearlos.")
        response = input("\n¬øEst√°s seguro de que quieres borrar TODA la colecci√≥n /sensors? (y/N): ")

        if response.lower() in ['y', 'yes', 's√≠', 'si']:
            # Borrar toda la colecci√≥n
            sensors_ref.delete()
            print("üóëÔ∏è  La colecci√≥n /sensors ha sido borrada completamente.")
            print("‚úì Operaci√≥n completada exitosamente.")
            print("\nüìù Pr√≥ximos pasos:")
            print("   1. Ejecuta: python setup_fixed_sensors.py")
            print("   2. Luego ejecuta: python simulate_rtdb.py")
        else:
            print("‚ùå Operaci√≥n cancelada por el usuario.")

    except FileNotFoundError:
        print(f"‚ùå Error: No se encontr√≥ el archivo de credenciales '{SERVICE_ACCOUNT_FILE}'")
        print("   Aseg√∫rate de que el archivo existe en el directorio actual.")
    except Exception as e:
        print(f"‚ùå Error inesperado: {e}")
    finally:
        # Limpiar la app de Firebase si fue inicializada
        try:
            firebase_admin.delete_app(firebase_admin.get_app())
        except ValueError:
            # App no fue inicializada
            pass

def main():
    print("üî• Script para borrar la colecci√≥n /sensors de Firebase RTDB")
    print("=" * 55)
    clear_sensors_collection()

if __name__ == "__main__":
    main()
